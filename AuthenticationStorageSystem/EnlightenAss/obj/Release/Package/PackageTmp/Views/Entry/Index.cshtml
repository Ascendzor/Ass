@model IEnumerable<AssClassLibrary.Entry>

<script src="~/Scripts/KeyboardNav.js"></script>

@if (String.IsNullOrEmpty(ViewBag.ProjectName))
{
    <h3>All Entries</h3>
}
else
{
    <a onclick="window.location.reload();"><i class="icon-large icon-home"></i></a>
    <p>/ </p>
    <directory onclick="requestItem('@ViewBag.ClientIdNum', '/Project/Index');"><a>
    @ViewBag.ClientName
    </a></directory>
    Write(" / ");
    <h3>@ViewBag.ProjectName</h3>
    Write(" / ");

}

<div class="rightButtonGroup">
    <button class="editButton btn btn-default btn-inverse" onclick="requestItem('@ViewBag.ProjectIdNum', '/Project/Change')">Modify Project</button>
    <button class="btn btn-default btn-inverse" style="margin-left:20px" onclick="requestItem('@ViewBag.ProjectIdNum', '/Entry/Create')">New Entry</button>
</div>
<br />
<p class="text-muted">@ViewBag.ProjectNotes</p>
<hr />


<table class="table table-bordered">
    <tr class="table-bordered headerRow">
        <th style="width: 300px;">
            @Html.DisplayNameFor(model => model.Username)
        </th>
        <th style="width: 300px;">
            @Html.DisplayNameFor(model => model.Website)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Notes)
        </th>
    </tr>

    @{int counter = 0;}
    @foreach (var item in Model)
    {
        <tr class="@item.DevState" id="@counter" onclick="requestItem('@item.EntryId', '/Entry/EntryDisplay')">
            <td class="entry">
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td class="entry">
                @Html.DisplayFor(modelItem => item.Website)
            </td>
            <td class="entry">
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
        </tr>
        counter++;
    }

</table>
<script>
    initialize();
    filterByDevState("Development"); filterByDevState("Testing"); filterByDevState("Staging");
</script>
